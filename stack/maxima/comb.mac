check_score_list(ans,scores,nam) := block([sc,an,fb,nn,nam1],
 sc : "", an : "", fb : "",
 nn : length(scores),
 if nam = "" then (
  nam1 : "the tournament"
 ) else (
  nam1 : sconcat("tournament ",nam)
 ),
 if an = "" and not(listp(ans)) then (
  an : "not a list",
  fb : "Your answer is not a list."
 ),
 if an = "" and not(every(nonnegativeintegerp,ans)) then (
  an : "not nonnegint",
  fb : "Your answer is not a list of nonnegative integers"
 ),
 if an = "" and not(length(ans) = length(scores)) then (
  an : "wrong length",
  fb : sconcat(
   "There are \\(",nn,"\\) players in ",nam1,", so your ",
   "answer should be a list of length \\(",nn,"\\). "
  )
 ),
 if an = "" and not(ans = reverse(sort(ans))) then (
  if ans = sort(ans) then (
   an : "increasing",
   fb : sconcat(
    "Your list is given in increasing order, but it should ",
    "be given in decreasing order."
   ) 
  ) else (
   an : "not decreasing",
   fb : "Your list is not sorted into decreasing order."
  )
 ),
 if an = "" and apply(max,ans) > nn - 1 then (
  an : "too big",
  fb : sconcat(
   "Each player plays \\(",nn-1,"\\) games, so the maximum ",
   "possible score for each player is \\(",nn-1,"\\).  It ",
   "does not make sense to have entries larger than this in ",
   "your list."
  )
 ),
 if an = "" and not(apply("+",ans) = binomial(nn,2)) then (
  an : "wrong sum",
  fb : sconcat(
   "The sum of the scores in your list should be equal to the ",
   "total number of games, which is ",
   "\\(\\binom{",nn,"}{2}=",binomial(nn,2),"\\).  In fact, however, ",
   "the sum of the scores in your list is \\(",apply("+",ans),"\\)."
  )
 ),
 if an = "" then (
  if ans = scores then (
   sc : 1, an : "correct"
  ) else (
   an : "incorrect"
  )
 ),
 return([sc,an,fb])
);