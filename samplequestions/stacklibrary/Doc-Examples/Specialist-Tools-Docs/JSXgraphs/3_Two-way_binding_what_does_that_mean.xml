<?xml version='1.0' encoding='utf-8'?>
<quiz><question type="stack">
    <name>
      <text>3. "Two-way binding", what does that mean?</text>
    </name>
    <questiontext format="html">
      <text>&lt;p&gt;In the previous example the binding transfers the position of both something in the graph to the input and retrieves the stored value of the input on page reload. Basically, one way binding is when the action in a graph changes setting the input value. For two way binding we also track the input value after the page has loaded so that if it changes due to any action we change the graph.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Now why would we want to do that when the graph itself sets the value!?&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We might want to provide the input field as a visible editable field so that if the student cannot drag e.g. the slider in the graph they can write the value into the input and the graph reacts as if the thing was moved there, this may be necessary in some cases, but it is not that useful generally.&lt;/li&gt;
&lt;li&gt;More likely is the case where we have multiple graphs connected to the same input and we want them to move in sync when something is done in any one of them.&lt;/li&gt;
&lt;li&gt;We could also have scripting outside the graph that could act on the value on the input(s) in some way and connecting to that might be difficult, but it is much simpler to connect to the input directly and our binding does just that.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This time you will need to open the questions source to see the code for these graphs, the key here being that each of them reference that same input and bind their slider to it.&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;Area slider: [[input:ans1]] [[validation:ans1]]&lt;br/&gt;
Test point: [[input:ans2]] [[validation:ans2]]&lt;/td&gt;
&lt;td&gt;
[[jsxgraph width='400px' height='400px' input-ref-ans1='ans1Ref' input-ref-ans2='ans2Ref']]
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-4.5, 4.5, 4.5, -4.5], showNavigation:false, grid:true});

var s1 =  board.create('slider',[[-4,4],[-1,4],[1,1,7]],{name: 'Area', snapWidth: 1, ticks: { drawLabels: true }});
stack_jxg.bind_slider(ans1Ref, s1);

var p = board.create('point', [4, 3]);
stack_jxg.bind_point(ans2Ref, p);

var c = board.create('point',[0,0],{visible: false});

var circle = board.create('circle',[c,Math.sqrt(s1.Value()/Math.PI)], {frozen:true, fixed:true, method:'pointRadius'});
circle.setRadius(function() {return Math.sqrt(s1.Value()/Math.PI);});

board.update();
[[/jsxgraph]]
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
[[jsxgraph width='400px' height='400px' input-ref-ans1='ans1Ref' input-ref-ans2='ans2Ref']]
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-4.5, 4.5, 4.5, -4.5], showNavigation:false, grid:true});

var s1 =  board.create('slider',[[-4,4],[-1,4],[1,1,7]],{name: 'Area', snapWidth: 1, ticks: { drawLabels: true }});
stack_jxg.bind_slider(ans1Ref, s1);

var p = board.create('point', [4, 3]);
stack_jxg.bind_point(ans2Ref, p);

var hw = function(){
 return Math.sqrt(s1.Value())/2.0;
}

var p1 = board.create('point',[function(){return hw();},function(){return hw();}],{visible: false});
var p2 = board.create('point',[function(){return hw();},function(){return -hw();}],{visible: false});
var p3 = board.create('point',[function(){return -hw();},function(){return -hw();}],{visible: false});
var p4 = board.create('point',[function(){return -hw();},function(){return hw();}],{visible: false});

var ploygon = board.create('polygon',[p1,p2,p3,p4],{frozen:true, fixed:true});

board.update();
[[/jsxgraph]]
&lt;/td&gt;
&lt;td&gt;
[[jsxgraph width='400px' height='400px' input-ref-ans1='ans1Ref' input-ref-ans2='ans2Ref']]
var board = JXG.JSXGraph.initBoard(divid, {boundingbox: [-4.5, 4.5, 4.5, -4.5], showNavigation:false, grid:true});

var s1 =  board.create('slider',[[-4,4],[-1,4],[1,1,7]],{name: 'Area', snapWidth: 1, ticks: { drawLabels: true }});
stack_jxg.bind_slider(ans1Ref, s1);

var p = board.create('point', [4, 3]);
stack_jxg.bind_point(ans2Ref, p);

var c = board.create('point',[0,0],{visible: false});

var circle = board.create('circle',[c,Math.sqrt(s1.Value()/Math.PI)], {frozen:true, fixed:true, method:'pointRadius'});
circle.setRadius(function() {return Math.sqrt(s1.Value()/Math.PI);});

board.update();
[[/jsxgraph]]
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;i&gt;Note that in this example if you write a valid value that the slider does not allow the slider will map that value to a value it allows and the binding to the other way will fix the input value. Basically, this slider has specific fixed ticks and those are enforced even in the input.&lt;/i&gt;&lt;/p&gt;</text>
    </questiontext>
    <generalfeedback format="moodle_auto_format">
      <text />
    </generalfeedback>
    <defaultgrade>1.0000000</defaultgrade>
    <penalty>0.1000000</penalty>
    <hidden>0</hidden>
    <idnumber />
    <stackversion>
      <text>2020040300</text>
    </stackversion>
    <questionvariables>
      <text />
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text />
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text>&lt;span style="font-size: 1.5em; color:green;"&gt;&lt;i class="fa fa-check"&gt;&lt;/i&gt;&lt;/span&gt; Correct answer, well done.</text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text>&lt;span style="font-size: 1.5em; color:orange;"&gt;&lt;i class="fa fa-adjust"&gt;&lt;/i&gt;&lt;/span&gt; Your answer is partially correct.</text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text>&lt;span style="font-size: 1.5em; color:red;"&gt;&lt;i class="fa fa-times"&gt;&lt;/i&gt;&lt;/span&gt; Incorrect answer.</text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <matrixparens>[</matrixparens>
    <variantsselectionseed />
    <input>
      <name>ans1</name>
      <type>algebraic</type>
      <tans>1</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint />
      <syntaxattribute>0</syntaxattribute>
      <forbidwords />
      <allowwords />
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options />
    </input>
    <input>
      <name>ans2</name>
      <type>algebraic</type>
      <tans>[1,1]</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint />
      <syntaxattribute>0</syntaxattribute>
      <forbidwords />
      <allowwords />
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options />
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackvariables>
        <text />
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>AlgEquiv</answertest>
        <sans>ans1</sans>
        <tans>ans1</tans>
        <testoptions />
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty />
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text />
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty />
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text />
        </falsefeedback>
      </node>
    </prt>
  </question>


  </quiz>